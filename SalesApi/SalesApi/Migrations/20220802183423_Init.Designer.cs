// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SalesApi.Infrastructure;

#nullable disable

namespace SalesApi.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20220802183423_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SalesApi.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b85a72af-2271-4a72-be3d-b805cd63a608"),
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("62c10f43-4ece-48bc-baf3-43a98d7fc25c"),
                            Name = "Сlothes"
                        });
                });

            modelBuilder.Entity("SalesApi.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SalesApi.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SalesApi.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockQty")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be03c6dc-cb4e-4beb-95b0-c92a3113d054"),
                            CategoryId = new Guid("b85a72af-2271-4a72-be3d-b805cd63a608"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(877),
                            ImageUrl = "https://images.unsplash.com/photo-1570145820259-b5b80c5c8bd6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80",
                            Name = "Brownie",
                            Price = 0.65m,
                            StockQty = 48,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(871)
                        },
                        new
                        {
                            Id = new Guid("c08427cd-0b5c-45e8-a4bc-ee09591ac465"),
                            CategoryId = new Guid("b85a72af-2271-4a72-be3d-b805cd63a608"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(879),
                            ImageUrl = "https://images.unsplash.com/photo-1607958996333-41aef7caefaa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            Name = "Muffin",
                            Price = 1.00m,
                            StockQty = 36,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(879)
                        },
                        new
                        {
                            Id = new Guid("8792fb33-c7f1-40ba-8d9f-518053ee97f0"),
                            CategoryId = new Guid("b85a72af-2271-4a72-be3d-b805cd63a608"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(881),
                            ImageUrl = "https://images.unsplash.com/photo-1553786013-ad9531e591d4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1135&q=80",
                            Name = "Cake Pop",
                            Price = 1.35m,
                            StockQty = 24,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(880)
                        },
                        new
                        {
                            Id = new Guid("e8b91c0f-9ee6-4f09-9a16-85ad70942350"),
                            CategoryId = new Guid("b85a72af-2271-4a72-be3d-b805cd63a608"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(893),
                            ImageUrl = "https://images.unsplash.com/photo-1584541305671-af4f46b4be2f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=965&q=80",
                            Name = "Apple tart",
                            Price = 1.50m,
                            StockQty = 60,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(893)
                        },
                        new
                        {
                            Id = new Guid("ad0b5f65-a2d8-4da1-8449-d6336fba19b2"),
                            CategoryId = new Guid("b85a72af-2271-4a72-be3d-b805cd63a608"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(895),
                            ImageUrl = "https://images.unsplash.com/photo-1595994195534-d5219f02f99f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            Name = "Water",
                            Price = 1.50m,
                            StockQty = 30,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(894)
                        },
                        new
                        {
                            Id = new Guid("bbd812c6-44bd-474e-932b-3503c64e0f5a"),
                            CategoryId = new Guid("62c10f43-4ece-48bc-baf3-43a98d7fc25c"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(896),
                            ImageUrl = "https://images.unsplash.com/photo-1618354691373-d851c5c3a990?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=415&q=80",
                            Name = "Shirt",
                            Price = 2.00m,
                            StockQty = 5,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(896)
                        },
                        new
                        {
                            Id = new Guid("a5605979-523b-4702-9a97-429534c77991"),
                            CategoryId = new Guid("62c10f43-4ece-48bc-baf3-43a98d7fc25c"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(898),
                            ImageUrl = "https://images.unsplash.com/photo-1542272604-787c3835535d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1026&q=80",
                            Name = "Pants",
                            Price = 3.00m,
                            StockQty = 5,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(897)
                        },
                        new
                        {
                            Id = new Guid("b80e1ded-c48b-4fa7-a9d8-adebc85f401c"),
                            CategoryId = new Guid("62c10f43-4ece-48bc-baf3-43a98d7fc25c"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(899),
                            ImageUrl = "https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=436&q=80",
                            Name = "Jacket",
                            Price = 4.00m,
                            StockQty = 5,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(899)
                        },
                        new
                        {
                            Id = new Guid("8571fd36-04ad-431d-857d-5f13b9b34baf"),
                            CategoryId = new Guid("62c10f43-4ece-48bc-baf3-43a98d7fc25c"),
                            CreatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(901),
                            ImageUrl = "https://images.unsplash.com/photo-1582845512747-e42001c95638?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            Name = "Toy",
                            Price = 2.00m,
                            StockQty = 1,
                            UpdatedAt = new DateTime(2022, 8, 2, 18, 34, 23, 269, DateTimeKind.Utc).AddTicks(900)
                        });
                });

            modelBuilder.Entity("SalesApi.Entities.OrderItem", b =>
                {
                    b.HasOne("SalesApi.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SalesApi.Entities.Product", b =>
                {
                    b.HasOne("SalesApi.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SalesApi.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SalesApi.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
