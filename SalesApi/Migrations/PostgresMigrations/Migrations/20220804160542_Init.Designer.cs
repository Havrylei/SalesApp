// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SalesApi.Infrastructure;

#nullable disable

namespace PostgresMigrations.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20220804160542_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eca5013b-9edd-4594-9461-9b5d4f242496"),
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("693183bf-51c4-45cd-9d2c-e8fbd20e10c3"),
                            Name = "Сlothes"
                        });
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockQty")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b3a2147-6848-4cdd-ab95-cf1dcbb68fa9"),
                            CategoryId = new Guid("eca5013b-9edd-4594-9461-9b5d4f242496"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1666),
                            ImageUrl = "https://images.unsplash.com/photo-1570145820259-b5b80c5c8bd6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80",
                            Name = "Brownie",
                            Price = 0.65m,
                            StockQty = 48,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1665)
                        },
                        new
                        {
                            Id = new Guid("b63cb897-34e3-4cec-bd05-1a87dc03521b"),
                            CategoryId = new Guid("eca5013b-9edd-4594-9461-9b5d4f242496"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1669),
                            ImageUrl = "https://images.unsplash.com/photo-1607958996333-41aef7caefaa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            Name = "Muffin",
                            Price = 1.00m,
                            StockQty = 36,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1669)
                        },
                        new
                        {
                            Id = new Guid("dd9a61b1-a90b-41f4-bfd3-ca41647b8bf4"),
                            CategoryId = new Guid("eca5013b-9edd-4594-9461-9b5d4f242496"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1671),
                            ImageUrl = "https://images.unsplash.com/photo-1553786013-ad9531e591d4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1135&q=80",
                            Name = "Cake Pop",
                            Price = 1.35m,
                            StockQty = 24,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1671)
                        },
                        new
                        {
                            Id = new Guid("b924d25d-ed10-4cab-b594-130685201560"),
                            CategoryId = new Guid("eca5013b-9edd-4594-9461-9b5d4f242496"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1673),
                            ImageUrl = "https://images.unsplash.com/photo-1584541305671-af4f46b4be2f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=965&q=80",
                            Name = "Apple tart",
                            Price = 1.50m,
                            StockQty = 60,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1672)
                        },
                        new
                        {
                            Id = new Guid("740fe256-ceac-432b-9c59-b6024eb61bd1"),
                            CategoryId = new Guid("eca5013b-9edd-4594-9461-9b5d4f242496"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1674),
                            ImageUrl = "https://images.unsplash.com/photo-1595994195534-d5219f02f99f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            Name = "Water",
                            Price = 1.50m,
                            StockQty = 30,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1674)
                        },
                        new
                        {
                            Id = new Guid("40ae7306-9686-4a28-b716-e28cf05c6eb6"),
                            CategoryId = new Guid("693183bf-51c4-45cd-9d2c-e8fbd20e10c3"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1677),
                            ImageUrl = "https://images.unsplash.com/photo-1618354691373-d851c5c3a990?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=415&q=80",
                            Name = "Shirt",
                            Price = 2.00m,
                            StockQty = 5,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1677)
                        },
                        new
                        {
                            Id = new Guid("b962e94b-5e22-407b-a197-907d929b35f8"),
                            CategoryId = new Guid("693183bf-51c4-45cd-9d2c-e8fbd20e10c3"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1679),
                            ImageUrl = "https://images.unsplash.com/photo-1542272604-787c3835535d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1026&q=80",
                            Name = "Pants",
                            Price = 3.00m,
                            StockQty = 5,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1678)
                        },
                        new
                        {
                            Id = new Guid("27742995-2510-4a0c-99ac-5423ceeb1b5d"),
                            CategoryId = new Guid("693183bf-51c4-45cd-9d2c-e8fbd20e10c3"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1684),
                            ImageUrl = "https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=436&q=80",
                            Name = "Jacket",
                            Price = 4.00m,
                            StockQty = 5,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1684)
                        },
                        new
                        {
                            Id = new Guid("cb0c4d16-e8c1-4ddb-843a-eda45a43b85f"),
                            CategoryId = new Guid("693183bf-51c4-45cd-9d2c-e8fbd20e10c3"),
                            CreatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1687),
                            ImageUrl = "https://images.unsplash.com/photo-1582845512747-e42001c95638?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            Name = "Toy",
                            Price = 2.00m,
                            StockQty = 1,
                            UpdatedAt = new DateTime(2022, 8, 4, 16, 5, 42, 547, DateTimeKind.Utc).AddTicks(1687)
                        });
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.OrderItem", b =>
                {
                    b.HasOne("SalesApi.Infrastructure.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.Product", b =>
                {
                    b.HasOne("SalesApi.Infrastructure.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SalesApi.Infrastructure.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
